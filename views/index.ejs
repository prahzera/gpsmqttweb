<!DOCTYPE html>
<html>

<head>
  <title>Dashboard de Seguimiento GPS</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
  <meta name="theme-color" content="#5a7167">
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  <link rel="stylesheet" href="/css/index.css">
</head>

<body>
  <div class="loader">
    <img src="/images/logo.png" alt="Loading...">
  </div>
  <header class="header">
    <img src="/images/logo.png" alt="Logo" class="logo">
    <h1 class="dashboard-title">Dashboard de Seguimiento GPS</h1>
    <nav class="header-actions">
      <button id="mobile-controls-toggle" class="mobile-menu-toggle">
        <span class="material-icons">tune</span>
      </button>
      <button id="show-stats" class="stats-button" title="Estad√≠sticas">
        <span class="material-icons">bar_chart</span>
      </button>
      <a href="/logout" class="logout-button">Cerrar sesi√≥n</a>
      <button id="dark-mode-toggle" class="dark-mode-toggle" title="Modo oscuro">üåô</button>
    </nav>
  </header>

  <main class="main-content">
    <section class="controls-section" id="controls-panel">
      <div class="controls-header mobile-only">
        <h3>Controles</h3>
        <button class="close-controls">
          <span class="material-icons">close</span>
        </button>
      </div>
      <div class="controls-group">
        <div class="controls">
          <label for="timeRange">Historial r√°pido:</label>
          <select id="timeRange" class="touch-friendly">
            <option value="1440">√öltimas 24 horas</option>
            <option value="720">√öltimas 12 horas</option>
            <option value="180">√öltimas 3 horas</option>
            <option value="60">√öltima hora</option>
            <option value="30">√öltimos 30 minutos</option>
            <option value="15">√öltimos 15 minutos</option>
            <option value="10">√öltimos 10 minutos</option>
            <option value="5">√öltimos 5 minutos</option>
          </select>
        </div>
        <div class="date-range-controls">
          <label>Rango personalizado:</label>
          <div class="date-inputs">
            <div class="date-field">
              <label for="startDate">Desde:</label>
              <input type="date" id="startDate" class="touch-friendly" max="<%= new Date().toISOString().split('T')[0] %>">
            </div>
            <div class="date-field">
              <label for="endDate">Hasta:</label>
              <input type="date" id="endDate" class="touch-friendly" max="<%= new Date().toISOString().split('T')[0] %>">
            </div>
          </div>
          <button id="applyDateRange" class="apply-btn touch-friendly">Aplicar</button>
        </div>
        <div class="metrics-summary">
          <div class="distance-summary-minimal" title="Distancia recorrida en el intervalo seleccionado">
            <span class="metric-icon">üìè</span>
            <span id="distance-current">
              <%= totalDistance ? totalDistance.toFixed(2) : '0' %> km
            </span>
          </div>
          <div class="distance-summary-minimal speed-summary" title="Velocidad promedio en el intervalo seleccionado">
            <span class="metric-icon">‚ö°</span>
            <span id="speed-average">0 km/h</span>
          </div>
        </div>
        <div class="distance-resume-mini">
          <span title="Hoy">H: <span id="distance-day-mini">
            <%= dailyDistances[new Date().toISOString().split('T')[0]] ? dailyDistances[new Date().toISOString().split('T')[0]].toFixed(2) : '0' %> km
          </span></span>
          <span title="Semana">S: <span id="distance-week-mini">
            <% 
              const now = new Date();
              const day = now.getDay() || 7;
              const date = now.getDate();
              const startDate = new Date(now);
              startDate.setDate(date - day + 1);
              const endDate = new Date(startDate);
              endDate.setDate(startDate.getDate() + 6);
              let weekDistance = 0;
              for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {
                const dayKey = d.toISOString().split('T')[0];
                if (dailyDistances[dayKey]) {
                  weekDistance += dailyDistances[dayKey];
                }
              }
            %>
            <%= weekDistance.toFixed(2) %> km
          </span></span>
          <span title="Mes">M: <span id="distance-month-mini">
            <% 
              const currentMonth = now.getFullYear() + '-' + (now.getMonth() + 1);
            %>
            <%= monthlyDistances[currentMonth] ? monthlyDistances[currentMonth].toFixed(2) : '0' %> km
          </span></span>
        </div>
      </div>
    </section>

    <section class="map-section">
      <h2 class="section-title">Mapa de Recorrido</h2>
      <div class="map-container">
        <div id="map"></div>
      </div>
    </section>
  </main>

  <!-- Modal de estad√≠sticas -->
  <div id="stats-modal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h3>Estad√≠sticas de velocidad</h3>
        <button class="close-modal">√ó</button>
      </div>
      <div class="modal-body">
        <div id="speed-histogram" class="histogram"></div>
        <div class="stats-details">
          <div class="stat-item">
            <span class="stat-label">Velocidad m√°xima:</span>
            <span id="max-speed" class="stat-value">0 km/h</span>
          </div>
          <div class="stat-item">
            <span class="stat-label">Velocidad m√≠nima:</span>
            <span id="min-speed" class="stat-value">0 km/h</span>
          </div>
          <div class="stat-item">
            <span class="stat-label">Tiempo en movimiento:</span>
            <span id="moving-time" class="stat-value">0 min</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script src="/js/script.js"></script>
  <script src="/js/night.js"></script>
  <script src="/js/loader.js"></script>
  <script src="/js/stats.js"></script>
  <script>
    // Script para manejar el men√∫ desplegable en m√≥viles
    document.addEventListener('DOMContentLoaded', function() {
      const mobileToggle = document.getElementById('mobile-controls-toggle');
      const controlsPanel = document.getElementById('controls-panel');
      const closeButton = document.querySelector('.close-controls');
      
      // Funci√≥n para verificar si estamos en m√≥vil
      const isMobile = () => window.innerWidth <= 768;
      
      // Inicializaci√≥n
      if (isMobile()) {
        controlsPanel.classList.add('collapsed');
      }
      
      // Toggle del panel de controles
      mobileToggle.addEventListener('click', function() {
        if (isMobile()) {
          controlsPanel.classList.toggle('collapsed');
          controlsPanel.classList.toggle('expanded');
          document.body.classList.toggle('controls-open');
        }
      });
      
      // Cerrar el panel
      closeButton.addEventListener('click', function() {
        if (isMobile()) {
          controlsPanel.classList.remove('expanded');
          controlsPanel.classList.add('collapsed');
          document.body.classList.remove('controls-open');
        }
      });
      
      // Cerrar el panel cuando se redimensiona a desktop
      window.addEventListener('resize', function() {
        if (!isMobile()) {
          controlsPanel.classList.remove('collapsed', 'expanded');
          document.body.classList.remove('controls-open');
        } else if (!controlsPanel.classList.contains('expanded')) {
          controlsPanel.classList.add('collapsed');
        }
      });
      
      // Cerrar el panel cuando se hace clic en el bot√≥n Aplicar
      document.getElementById('applyDateRange').addEventListener('click', function() {
        if (isMobile()) {
          controlsPanel.classList.remove('expanded');
          controlsPanel.classList.add('collapsed');
          document.body.classList.remove('controls-open');
        }
      });
    });
  </script>
</body>

</html>